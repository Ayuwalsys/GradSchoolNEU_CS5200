plot(cars)
plot(cars)
plot(cars)
dbfile <-"MediaDB.db"
dbfile <-"MediaDB.db"
dbcon <- dbConnect(SQLite(), dbfile)
library(RSQLite)
dbfile <-"MediaDB.db"
dbcon <- dbConnect(SQLite(), dbfile)
SELECT *
FROM employee
SELECT *
FROM employee
library(RSQLite)
dbfile <-"MediaDB.db"
dbcon <- dbConnect(SQLite(), dbfile)
query <- "SELECT * FROM employee;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT * FROM employees;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT * FROM employees;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT * FROM employees;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT Lastname, FirstName, Title, HireDate
FROM employees
ORDER BY LastName;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT lastname, firstName, title, hireDate
FROM employees
ORDER BY lastName;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT lastname, firstName, title, hireDate
FROM employees
ORDER BY lastName;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT lastname, firstName, title, hireDate
FROM employees
ORDER BY lastName;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT Lastname, FirstName, Title, HireDate
FROM employees
ORDER BY LastName;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT Lastname, FirstName, Title, HireDate
FROM employees
ORDER BY LastName;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT g.Name AS GenreName, COUNT(DISTINCT a.AlbumId) AS NumberOfAlbums
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
JOIN albums a ON t.AlbumId = a.AlbumId
GROUP BY g.Name
ORDER BY NumberOfAlbums DESC;"
query <- "SELECT g.Name AS GenreName, COUNT(DISTINCT a.AlbumId) AS NumberOfAlbums
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
JOIN albums a ON t.AlbumId = a.AlbumId
GROUP BY g.Name
ORDER BY NumberOfAlbums DESC;
result <- dbGetQuery(dbcon, query)
print(result)"
query <- "SELECT g.Name AS GenreName, COUNT(DISTINCT a.AlbumId) AS NumberOfAlbums
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
JOIN albums a ON t.AlbumId = a.AlbumId
GROUP BY g.Name
ORDER BY NumberOfAlbums DESC;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT g.Name AS GenreName, COUNT(DISTINCT a.AlbumId) AS NumberOfDistinctAlbums
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
JOIN albums a ON t.AlbumId = a.AlbumId
GROUP BY g.Name
ORDER BY NumberOfAlbums DESC;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT g.Name AS GenreName, COUNT(DISTINCT a.AlbumId) AS NumberOfDistinctAlbums
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
JOIN albums a ON t.AlbumId = a.AlbumId
GROUP BY g.Name
ORDER BY NumberOfDistinctAlbums DESC;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT * FROM media_types"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT DISTINCT Name
FROM media_types"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT DISTINCT Name
FROM media_types;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT g.Name AS GenreName, COUNT(t.TrackId) AS NumberOfTrack
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.Name
HAVING COUNT(t.TrackId) >= 4
ORDER BY NumberOfTrack DESC"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT LastName, FirstName
FROM employee
ORDER BY STRFTIME('%Y-%m', BirthDate) DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT LastName, FirstName
FROM employees
ORDER BY STRFTIME('%Y-%m', BirthDate) DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT c.State, COUNT(DISTINCT i.InvoiceId) AS TotalPurchases
FROM customer c
JOIN invoices i ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil'
GROUP BY c.State
HAVING COUNT(DISTINCT i.InvoiceId) >= 2
ORDER BY c.State ASC;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT c.State, COUNT(DISTINCT i.InvoiceId) AS TotalPurchases
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil'
GROUP BY c.State
HAVING COUNT(DISTINCT i.InvoiceId) >= 2
ORDER BY c.State ASC;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(*) AS NumberOfEmployeesWithoutCustomers
FROM employees e
LEFT JOIN customers c ON e.employeeId = c.SupportRepId
WHERE c.SupportRepId IS NULL;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(*)
FROM albums
WHERE Title Like '%Classic%' AND Title NOT LIKE '%Hard%'"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(DISTINCT GenreId) AS TotalNumberOfDistinctGenres
FROM genres;"
query <- "SELECT COUNT(DISTINCT GenreId) AS TotalNumberOfDistinctGenres
FROM genres;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT mt.Name AS MediaType,
ROUND(SUM(tr.Milliseconds) / 3600000.0,1) AS TotalTimeInHours
FROM media_types mt
JOIN tracks tr ON mt.MediaTypeId = tr.MediaTypeId
GROUP BY mt.Name
HAVING COUNT(tr.TrackId) > 0;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT al.Title AS AlbumTitle, ar.Name AS ArtistName,
SUM(tr.Milliseconds) / 60000.0 AS TotalMinutes
FROM albums al
JOIN tracks tr ON al.AlbumId = tr.AlbumId
JOIN  artists ar ON al.ArtistId = ar.ArtistId
GROUP BY al.AlbumId, al.Title, ar.Name
ORDER BY TotalMinutes DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT g.Name AS GenreName, COUNT(t.TrackId) AS NumberOfTracks
FROM genre g
JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.GenreId
ORDER BY NumberOfTracks ASC
LIMIT 1;
"
result <- dbGetQuery(dbcon, query)
query <- "SELECT g.Name AS GenreName, COUNT(t.TrackId) AS NumberOfTracks
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.GenreId
ORDER BY NumberOfTracks ASC
LIMIT 1;
"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT mt.Name AS MediaType, COUNT(t.TrackId) AS NumberOfTracks
FROM media_types mt
JOIN tracks t ON mt.MediaTypeId = t.MediaTypeId
GROUP BY mt.MediaTypeId
ORDER BY NumberOfTracks ASC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT c.Country, COUNT(DISTINCT c.CustomerId) AS TotalUniqueCustomers,
SUM(i.Total) AS TotalSpent
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.Country
ORDER BY c.Country"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT SUM(i.Total) AS TotalSpent
FROM customer c
JOIN invoices i ON c.CustomerId = i.CustomerId
WHERE c.Country NOT IN('Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia',
'Ecuador', 'Guyana', 'Paraguay', 'Peru', 'Suriname', 'Uruguay', 'Venezuela')"
result <- dbGetQuery(dbcon, query)
query <- "SELECT SUM(i.Total) AS TotalSpent
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
WHERE c.Country NOT IN('Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia',
'Ecuador', 'Guyana', 'Paraguay', 'Peru', 'Suriname', 'Uruguay', 'Venezuela')"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalMPEG,
SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalAAC
ABS(SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE
0 END) - SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END)) AS MPEGandAACDiferences
FROM invoices i
JOIN invoice_item ii ON i.InvoiceId = ii.InvoiceId
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN media_types mt ON t.MediaTypeId = mt.MediaTypeId;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalMPEG,
SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalAAC,
ABS(SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE
0 END) - SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END)) AS MPEGandAACDiferences
FROM invoices i
JOIN invoice_item ii ON i.InvoiceId = ii.InvoiceId
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN media_types mt ON t.MediaTypeId = mt.MediaTypeId;"
result <- dbGetQuery(dbcon, query)
query <- "SELECT SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalMPEG,
SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalAAC,
ABS(SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE
0 END) - SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END)) AS MPEGandAACDiferences
FROM invoices i
JOIN invoice_items ii ON i.InvoiceId = ii.InvoiceId
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN media_types mt ON t.MediaTypeId = mt.MediaTypeId;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT Country, COUNT(CustomerId) AS NumberOfCustomers
FROM customers
GROUP BY country
ORDER BY NumberOfCustomers DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(t.TrackId) AS NumberOfTracks
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
WHERE ar.Name = 'Amy Winehouse';"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(t.TrackId) AS Number Of Tracks
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
WHERE ar.Name = 'Amy Winehouse';"
result <- dbGetQuery(dbcon, query)
query <- "SELECT COUNT(t.TrackId) AS NumberOfTracks
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
WHERE ar.Name = 'Amy Winehouse';"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT ar.Name AS ArtistName, SUM(ii.UnitPrice * ii.Quantity) AS TotalEarned
FROM invoice_items ii
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
GROUP BY ar.ArtistId, ar.Name
ORDER BY TotalEarned DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT ar.Name AS ArtistName, COUNT(ii.TrackId) AS NumberOfPurchases
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
JOIN invoice_items ii ON i.InvoiceId = ii.InvoiceId
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
WHERE c.City = 'Paris'
GROUP BY ar.ArtistId
ORDER BY NumberOfPurchases DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
library(RSQLite)
dbfile <-"MediaDB.db"
dbcon <- dbConnect(SQLite(), dbfile)
query <- "SELECT Lastname, FirstName, Title, HireDate
FROM employees
ORDER BY LastName;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT g.Name AS GenreName, COUNT(DISTINCT a.AlbumId) AS NumberOfDistinctAlbums
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
JOIN albums a ON t.AlbumId = a.AlbumId
GROUP BY g.Name
ORDER BY NumberOfDistinctAlbums DESC;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT DISTINCT Name
FROM media_types;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT g.Name AS GenreName, COUNT(t.TrackId) AS NumberOfTrack
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.Name
HAVING COUNT(t.TrackId) >= 4
ORDER BY NumberOfTrack DESC"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT LastName, FirstName
FROM employees
ORDER BY STRFTIME('%Y-%m', BirthDate) DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT c.State, COUNT(DISTINCT i.InvoiceId) AS TotalPurchases
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil'
GROUP BY c.State
HAVING COUNT(DISTINCT i.InvoiceId) >= 2
ORDER BY c.State ASC;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(*) AS NumberOfEmployeesWithoutCustomers
FROM employees e
LEFT JOIN customers c ON e.employeeId = c.SupportRepId
WHERE c.SupportRepId IS NULL;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(*)
FROM albums
WHERE Title Like '%Classic%' AND Title NOT LIKE '%Hard%';"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(DISTINCT GenreId) AS TotalNumberOfDistinctGenres
FROM genres;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT mt.Name AS MediaType,
ROUND(SUM(tr.Milliseconds) / 3600000.0,1) AS TotalTimeInHours
FROM media_types mt
JOIN tracks tr ON mt.MediaTypeId = tr.MediaTypeId
GROUP BY mt.Name
HAVING COUNT(tr.TrackId) > 0;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT al.Title AS AlbumTitle, ar.Name AS ArtistName,
SUM(tr.Milliseconds) / 60000.0 AS TotalMinutes
FROM albums al
JOIN tracks tr ON al.AlbumId = tr.AlbumId
JOIN  artists ar ON al.ArtistId = ar.ArtistId
GROUP BY al.AlbumId, al.Title, ar.Name
ORDER BY TotalMinutes DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT g.Name AS GenreName, COUNT(t.TrackId) AS NumberOfTracks
FROM genres g
JOIN tracks t ON g.GenreId = t.GenreId
GROUP BY g.GenreId
ORDER BY NumberOfTracks ASC
LIMIT 1;
"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT mt.Name AS MediaType, COUNT(t.TrackId) AS NumberOfTracks
FROM media_types mt
JOIN tracks t ON mt.MediaTypeId = t.MediaTypeId
GROUP BY mt.MediaTypeId
ORDER BY NumberOfTracks ASC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT c.Country, COUNT(DISTINCT c.CustomerId) AS TotalUniqueCustomers,
SUM(i.Total) AS TotalSpent
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
GROUP BY c.Country
ORDER BY c.Country"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT SUM(i.Total) AS TotalSpent
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
WHERE c.Country NOT IN('Argentina', 'Bolivia', 'Brazil', 'Chile', 'Colombia',
'Ecuador', 'Guyana', 'Paraguay', 'Peru', 'Suriname', 'Uruguay', 'Venezuela')"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalMPEG,
SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END) AS TotalAAC,
ABS(SUM(CASE WHEN mt.Name LIKE '%MPEG%' THEN ii.UnitPrice * ii.Quantity ELSE
0 END) - SUM(CASE WHEN mt.Name LIKE '%AAC%' THEN ii.UnitPrice * ii.Quantity ELSE 0 END)) AS MPEGandAACDiferences
FROM invoices i
JOIN invoice_items ii ON i.InvoiceId = ii.InvoiceId
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN media_types mt ON t.MediaTypeId = mt.MediaTypeId;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT Country, COUNT(CustomerId) AS NumberOfCustomers
FROM customers
GROUP BY country
ORDER BY NumberOfCustomers DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT COUNT(t.TrackId) AS NumberOfTracks
FROM tracks t
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
WHERE ar.Name = 'Amy Winehouse';"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT ar.Name AS ArtistName, SUM(ii.UnitPrice * ii.Quantity) AS TotalEarned
FROM invoice_items ii
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
GROUP BY ar.ArtistId, ar.Name
ORDER BY TotalEarned DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
query <- "SELECT ar.Name AS ArtistName, COUNT(ii.TrackId) AS NumberOfPurchases
FROM customers c
JOIN invoices i ON c.CustomerId = i.CustomerId
JOIN invoice_items ii ON i.InvoiceId = ii.InvoiceId
JOIN tracks t ON ii.TrackId = t.TrackId
JOIN albums a ON t.AlbumId = a.AlbumId
JOIN artists ar ON a.ArtistId = ar.ArtistId
WHERE c.City = 'Paris'
GROUP BY ar.ArtistId
ORDER BY NumberOfPurchases DESC
LIMIT 1;"
result <- dbGetQuery(dbcon, query)
print(result)
