"0","prepareStrikesData <- function(df, flights_df, conditions_df) {"
"0","  # Convert altitude_ft to numeric and ensure it's non-negative"
"0","  df$altitude_ft <- as.numeric(gsub("","", """", df$altitude_ft))"
"0","  df$altitude_ft[df$altitude_ft < 0] <- 0"
"0",""
"0","  # Map fid to flight IDs based on the record ID"
"0","  df$fid <- match(df$rid, flights_df$fid)"
"0","  df$fid[is.na(df$fid)] <- -1  # Handles unmatched fids with a default value"
"0","  "
"0","  # Map conditions to condition IDs based on sky conditions"
"0","  df$conditions <- match(df$sky_conditions, conditions_df$sky_condition)"
"0","  df$conditions[is.na(df$conditions)] <- -1  # Handle unmatched conditions with a default value"
"0",""
"0","  # Convert damage description to boolean (TRUE for 'Damage', FALSE otherwise)"
"0","  df$damage <- df$damage == ""Damage"""
"0",""
"0","  # Handle numbirds"
"0","  if (!""numbirds"" %in% names(df) || all(is.na(df$numbirds))) {"
"0","    df$numbirds <- rep(0, nrow(df))  # Assign 0 to all rows if the column doesn't exist or is entirely NA"
"0","  } else {"
"0","    df$numbirds <- as.integer(df$numbirds)"
"0","    df$numbirds[is.na(df$numbirds)] <- 0  # Replace NA with 0"
"0","  }"
"0",""
"0","  # Subset and rename columns as per table structure"
"0","  strikes_df <- data.frame("
"0","    fid = df$fid,"
"0","    numbirds = df$numbirds,"
"0","    impact = df$impact,"
"0","    damage = df$damage,"
"0","    altitude = df$altitude_ft,"
"0","    conditions = df$conditions"
"0","  )"
"0",""
"0","  return(strikes_df)"
"0","}"
"0",""
"0","# Used case"
"0","strikes_data <- prepareStrikesData(bds.raw, flights_data, conditions_data)"
"0",""
