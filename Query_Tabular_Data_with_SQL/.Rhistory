plot(cars)
install.packages("sqldf")
library(readr)
install.packages("readr")
library(dplyr)
install.packages("dplyr")
library(readr)
library(sqldf)
library(dplyr)
#URLs of the datasets
url_jan_mar <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Jan2Mar.csv"
url_sep_oct <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Sep2Oct.csv"
url_nov_dec <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Nov2Dec.csv"
#Load the datasets
data_jan_mar <- read_csv(url_jan_mar)
data_sep_oct <- read_csv(url_sep_oct)
data_nov_dec <- read_csv(url_nov_dec)
#Combine the datasets
all_data <- bind_rows(data_jan_mar, data_sep_oct, data_nov_dec)
library(readr)
library(sqldf)
library(dplyr)
#URLs of the datasets
url_jan_mar <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Jan2Mar.csv"
url_sep_oct <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Sep2Oct.csv"
url_nov_dec <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Nov2Dec.csv"
#Load the datasets
data_jan_mar <- read_csv(url_jan_mar)
data_sep_oct <- read_csv(url_sep_oct)
data_nov_dec <- read_csv(url_nov_dec)
#Combine the datasets
all_data <- bind_rows(data_jan_mar, data_sep_oct, data_nov_dec)
print(all_data)
# Total Visits and Unique Restaurants
total_visits_unique_restaurants <- sqldf("SELECT COUNT(*) AS Total_Visits, COUNT(DISTINCT restaurant) AS Unique_Restaurants FROM all_data")
# Date Range (Extracting Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Year, MAX(date) AS End_Year FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
# Total Visits and Unique Restaurants
total_visits_unique_restaurants <- sqldf("SELECT COUNT(*) AS Total_Visits, COUNT(DISTINCT restaurant) AS Unique_Restaurants FROM all_data")
# Date Range (Extracting Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Year, MAX(date) AS End_Year FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
library(sqldf)
# URLs for CSV files
#URLs of the datasets
url_jan_mar <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Jan2Mar.csv"
url_sep_oct <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Sep2Oct.csv"
url_nov_dec <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Nov2Dec.csv"
# Read and combine data
data_jan_mar <- read.csv(url_jan_mar)
data_sep_oct <- read.csv(url_sep_oct)
data_nov_dec <- read.csv(url_nov_dec)
all_data <- rbind(data_jan_mar, data_sep_oct, data_nov_dec)
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# Total Visits and Unique Restaurants
total_visits_unique_restaurants <- sqldf("SELECT COUNT(*) AS Total_Visits, COUNT(DISTINCT restaurant) AS Unique_Restaurants FROM all_data")
# Date Range (Extracting Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Year, MAX(date) AS End_Year FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
# Total Visits and Unique Restaurants
total_visits_unique_restaurants <- sqldf("SELECT COUNT(*) AS Total_Visits, COUNT(DISTINCT restaurant) AS Unique_Restaurants FROM all_data")
# Date Range (Extracting Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
date_range$End_Year <- format(as.Date(date_range$End_Date), "%Y")
# Average Amount Spent and Standard Deviation
avg_std_amount <- sqldf("SELECT AVG(amount) AS Average_Amount, STDEV(amount) AS Std_Dev_Amount FROM all_data")
# Most Visits and Largest Revenue
most_visits <- sqldf("SELECT restaurant, COUNT(*) AS Visits FROM all_data GROUP BY restaurant ORDER BY Visits DESC LIMIT 1")
largest_revenue <- sqldf("SELECT restaurant, SUM(amount) AS Revenue FROM all_data GROUP BY restaurant ORDER BY Revenue DESC LIMIT 1")
# Average Party Size and Percentage of Parties Consuming Wine
avg_party_size <- sqldf("SELECT AVG(guests) AS Average_Party_Size FROM all_data")
wine_percentage <- sqldf("SELECT (SUM(CASE WHEN wine = 'Yes' THEN 1 ELSE 0 END) / CAST(COUNT(*) AS FLOAT)) * 100 AS Wine_Percentage FROM all_data")
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# SQL query for average amount and standard deviation
avg_amount <- sqldf("SELECT AVG(amount) AS Average_Amount FROM all_data")
# Calculate standard deviation in R
std_dev_amount <- sd(all_data$amount)
# Combine results
avg_amount <- data.frame(Average_Amount = avg_amount$Average_Amount, Std_Dev = std_dev_amount)
avg_amount
#Convert 'amount' to nemric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' column to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# SQL query for time range(Extract Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
time_range
#Convert 'amount' to nemric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' column to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# SQL query for time range(Extract Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
date_range
library(readr)
library(sqldf)
library(dplyr)
#URLs of the datasets
url_jan_mar <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Jan2Mar.csv"
url_sep_oct <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Sep2Oct.csv"
url_nov_dec <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Nov2Dec.csv"
#Load the datasets
data_jan_mar <- read_csv(url_jan_mar)
data_sep_oct <- read_csv(url_sep_oct)
data_nov_dec <- read_csv(url_nov_dec)
#Combine the datasets
all_data <- bind_rows(data_jan_mar, data_sep_oct, data_nov_dec)
#print(all_data)
# SQL query for total visits and unique restaurants
total_unique <- sqldf("SELECT COUNT(*) AS Total_Visits, COUNT(DISTINCT restaurant) AS Unique_Restaurants FROM all_data")
total_unique
#Convert 'amount' to nemric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' column to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# SQL query for time range(Extract Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
date_range
#Convert 'amount' to nemric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' column to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# SQL query for time range(Extract Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
date_range$End_Year <- format(as.Date(date_range$End_Date), "%Y")
date_range$Start_Date
date_range$End_Date
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# Date Range (Extracting Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
date_range$End_Year <- format(as.Date(date_range$End_Date), "%Y")
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# Date Range (Extracting Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
date_range$End_Year <- format(as.Date(date_range$End_Date), "%Y")
date_range$Start_Date
library(sqldf)
# URLs for CSV files
#URLs of the datasets
url_jan_mar <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Jan2Mar.csv"
url_sep_oct <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Sep2Oct.csv"
url_nov_dec <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Nov2Dec.csv"
# Read and combine data
data_jan_mar <- read.csv(url_jan_mar)
data_sep_oct <- read.csv(url_sep_oct)
data_nov_dec <- read.csv(url_nov_dec)
all_data <- rbind(data_jan_mar, data_sep_oct, data_nov_dec)
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
#Convert 'amount' to nemric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# Convert 'date' column to Date format
all_data$date <- as.Date(all_data$date, format="%m/%d/%y")
# SQL query for time range(Extract Year)
date_range <- sqldf("SELECT MIN(date) AS Start_Date, MAX(date) AS End_Date FROM all_data")
date_range$Start_Year <- format(as.Date(date_range$Start_Date), "%Y")
date_range$End_Year <- format(as.Date(date_range$End_Date), "%Y")
date_range$Start_Year
date_range$End_Year
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# SQL query for average amount and standard deviation
avg_amount <- sqldf("SELECT AVG(amount) AS Average_Amount FROM all_data")
# Calculate standard deviation in R
std_dev_amount <- sd(all_data$amount)
# Combine results
avg_amount <- data.frame(Average_Amount = avg_amount$Average_Amount, Std_Dev = std_dev_amount)
avg_amount
# Most visits
most_visits <- sqldf("SELECT restaurant, COUNT(*) AS Visits FROM all_data GROUP BY restaurant ORDER BY Visits DESC LIMIT 1")
most_visits
# Largest revenue
largest_revenue <- sqldf("SELECT restaurant, SUM(amount) AS Total_Revenue FROM all_data GROUP BY restaurant ORDER BY Total_Revenue DESC LIMIT 1")
largest_revenue
# Average party size and wine consumption percentage
party_wine_stats <- sqldf("SELECT AVG(guests) AS Average_Party_Size, AVG(CASE WHEN wine = 'Yes' THEN 1 ELSE 0 END) * 100 AS Wine_Consumption_Percentage FROM all_data")
party_wine_stats
# Summary of revenue by restaurant
revenue_summary <- sqldf("SELECT restaurant, COUNT(*) AS Total_Visits, AVG(amount) AS Average_Revenue FROM all_data GROUP BY restaurant")
revenue_summary
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# SQL query for average amount and standard deviation
avg_amount <- sqldf("SELECT AVG(amount) AS Average_Amount, STDEV(amount) AS Std_Dev_Amount FROM all_data")
# Combine results
avg_amount <- data.frame(Average_Amount = avg_amount$Average_Amount, Std_Dev = std_dev_amount)
avg_amount
# Average party size and wine consumption percentage
avg_party_size <- sqldf("SELECT AVG(guests) AS Average_Party_Size FROM all_data")
party_wine_stats <- sqldf("SELECT (SUM(CASE WHEN wine = 'Yes' THEN 1 ELSE 0 END) / CAST(COUNT(*) AS FLOAT)) * 100 AS Wine_Percentage FROM all_data")
party_wine_stats
# Average party size and wine consumption percentage
avg_party_size <- sqldf("SELECT AVG(guests) AS Average_Party_Size FROM all_data")
party_wine_stats <- sqldf("SELECT (SUM(CASE WHEN wine = 'Yes' THEN 1 ELSE 0 END) / CAST(COUNT(*) AS FLOAT)) * 100 AS Wine_Percentage FROM all_data")
avg_party_size
party_wine_stats
# Average party size and wine consumption percentage
party_wine_stats <- sqldf("SELECT AVG(guests) AS Average_Party_Size, AVG(CASE WHEN wine = 'Yes' THEN 1 ELSE 0 END) * 100 AS Wine_Consumption_Percentage FROM all_data")
party_wine_stats
# Convert 'amount' to numeric
all_data$amount <- as.numeric(gsub("\\$", "", all_data$amount))
# SQL query for average amount and standard deviation
avg_std_amount <- sqldf("SELECT AVG(amount) AS Average_Amount, STDEV(amount) AS Std_Dev_Amount FROM all_data")
avg_std_amount
library(readr)
library(sqldf)
library(dplyr)
#URLs of the datasets
url_jan_mar <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Jan2Mar.csv"
url_sep_oct <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Sep2Oct.csv"
url_nov_dec <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Nov2Dec.csv"
#Load the datasets
data_jan_mar <- read_csv(url_jan_mar)
data_sep_oct <- read_csv(url_sep_oct)
data_nov_dec <- read_csv(url_nov_dec)
#Combine the datasets
all_data <- bind_rows(data_jan_mar, data_sep_oct, data_nov_dec)
#URLs of the datasets
url_jan_mar <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Jan2Mar.csv"
url_sep_oct <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Sep2Oct.csv"
url_nov_dec <- "https://s3.us-east-2.amazonaws.com/artificium.us/assignments/80.xml/a-80-305/gen-xml/synthsalestxns-Nov2Dec.csv"
#Load the datasets
data_jan_mar <- read_csv(url_jan_mar)
data_sep_oct <- read_csv(url_sep_oct)
data_nov_dec <- read_csv(url_nov_dec)
#Combine the datasets
all_data <- bind_rows(data_jan_mar, data_sep_oct, data_nov_dec)
